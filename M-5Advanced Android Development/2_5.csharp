using Android.App;
using Android.Content;
using Android.Media;
using Android.OS;
using Android.Widget;
using Android.Net;
using AndroidX.Core.App;
using AndroidX.Core.Content;

namespace AudioPlayerApp
{
    [Activity(Label = "AudioPlayerApp", MainLauncher = true)]
    public class MainActivity : Activity
    {
        const int PickAudioRequest = 1;
        MediaPlayer mediaPlayer;

        protected override void OnCreate(Bundle savedInstanceState)
        {
            base.OnCreate(savedInstanceState);
            SetContentView(Resource.Layout.activity_main);

            var btnSelect = FindViewById<Button>(Resource.Id.btnSelect);

            // Request permission if not already granted
            if (ContextCompat.CheckSelfPermission(this, Android.Manifest.Permission.ReadExternalStorage) != Android.Content.PM.Permission.Granted)
            {
                ActivityCompat.RequestPermissions(this, new string[] { Android.Manifest.Permission.ReadExternalStorage }, 0);
            }

            btnSelect.Click += (s, e) =>
            {
                Intent intent = new Intent(Intent.ActionGetContent);
                intent.SetType("audio/*");
                StartActivityForResult(intent, PickAudioRequest);
            };
        }

        protected override void OnActivityResult(int requestCode, Result resultCode, Intent data)
        {
            base.OnActivityResult(requestCode, resultCode, data);

            if (requestCode == PickAudioRequest && resultCode == Result.Ok && data != null)
            {
                Uri audioUri = data.Data;
                PlayAudio(audioUri);
            }
        }

        void PlayAudio(Uri uri)
        {
            if (mediaPlayer != null)
            {
                mediaPlayer.Release();
                mediaPlayer = null;
            }

            mediaPlayer = MediaPlayer.Create(this, uri);
            mediaPlayer?.Start();
        }

        protected override void OnDestroy()
        {
            base.OnDestroy();
            mediaPlayer?.Release();
        }
    }
}
